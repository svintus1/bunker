services:
  frontend:
    image: 10.0.10.15:5000/frontend:latest
    restart: always
    ports:
      - 8080:80
    configs:
      - source: nginx.conf
        target: /etc/nginx/nginx.conf
    networks:
      - my_network
    
  backend:
    image: 10.0.10.15:5000/backend:latest
    restart: always
    environment:
      ENVIRONMENT: "development"
      BACKEND_HOST: 0.0.0.0
      BACKEND_PORT: 8000
      FRONTEND_HOST: 166.4.2.1
      FRONTEND_PORT: 3005
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: demid
      POSTGRES_PASSWORD: test
      POSTGRES_DB: prod_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: mypassword
    # env_file:
    #   - config/.env.backend
    #   - config/.env.pg
    #   - config/.env.redis
    networks:
      - my_network
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB_FILE: /run/secrets/pg_db
      POSTGRES_USER_FILE: /run/secrets/pg_user
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_pass
    secrets:
      - pg_db
      - pg_user
      - pg_pass
    env_file:
      - config/.env.pg
    networks:
      - my_network

  redis:
    image: redis/redis-stack:latest
    restart: always
    secrets:
      - source: redis.conf
        target: /etc/redis/redis.conf
    environment:
      REDIS_ARGS: "--requirepass mypassword"
    networks:
      - my_network

networks:
  my_network:
    driver: overlay

configs:
  nginx.conf:
    external: true

secrets:
  redis.conf:
    external: true
  pg_db:
    external: true
  pg_user:
    external: true
  pg_pass:
    external: true