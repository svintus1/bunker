export class Line {
    public text: string;
    public color: string;
    public duration: number;
    public overwrite: boolean;

    constructor(text: string, color: string, duration: number = 0, overwrite: boolean = false) {
        this.text = text;
        this.color = color;
        this.duration = duration;
        this.overwrite = overwrite;
    }
}
export const helloSequence: Line[] = [
    new Line("[SYSTEM] Добро пожаловать в Bunker!", "#aaaaaa", 100),
    new Line("[SYSTEM] Ожидаем регистрации пользователей...", "#aaaaaa", 100),
    new Line("[HELP] Введите команду 'help' для информации о командах", "#aaaaaa", 100),
]

export const helpSequence: Line[] = [
    new Line("[HELP] Команда 'users show' - показать список игроков", "#aaaaaa"),
    new Line("[HELP] Команда 'kick {number}' - исключить игрока по номеру (например, 'kick 5')", "#aaaaaa"),
    new Line("[HELP] Команда 'start' - начать игру", "#aaaaaa"),
    new Line("[HELP] Команда 'exit' - покинуть лобби", "#aaaaaa"),
];

export const bootSequence: Line[] = [
    new Line(">> [BOOT] BunkerOS v7.4.0-Ψ3 INITIALIZING...", "#00ff00", 400),

    new Line("[INPUT] Инициация процедуры верификации системных компонентов...", "#aaaaaa", 40),
    new Line("[PROCESS] Модуль: checksum::core>init()", "#aaaaaa", 30),
    new Line("[SYS] Выполняется CRC32-проверка ядра...", "#aaaaaa", 40),
    new Line("[CHECKSUM] Результат: 9F-A2-73-00-Ψ3::valid", "#aaaaaa", 30),
    new Line("[AUTH] Верификация цифровой подписи ядра...", "#aaaaaa", 40),
    new Line("[SIGNATURE] Подпись: RSA-4096 OK :: identity=bunker-core-Ψ3", "#00ff00", 20),
    new Line("[SECURITY] Сертификат системы: Ψ-ROOT-TRUST.crt подтверждён", "#00ff00", 20),
    new Line("[INFO] Версия ядра: BunkerOS 7.4.0-Ψ3 @ 0xBFC0", "#00ff00", 20),
    new Line("[STATUS] Состояние ядра: В СИНХРОНИЗАЦИИ С ЦЕНТРАЛЬНЫМ УЗЛОМ", "#00ff00", 20),
    new Line("[SYNC] Таймкод: 0023-9D7B-CΨ", "#aaaaaa", 20),
    new Line("[SECLOG] Аудит завершён: ошибок не обнаружено", "#00ff00", 20),

    // Загрузка компонентов ядра с прогресс-баром
    new Line("[LOAD] Загрузка ядра [▒▒▒▒▒▒▒▒▒▒]", "#aaaaaa", 50),
    new Line("[LOAD] Загрузка ядра [█▒▒▒▒▒▒▒▒▒]", "#aaaaaa", 50, true),
    new Line("[LOAD] Загрузка ядра [██▒▒▒▒▒▒▒▒]", "#aaaaaa", 50, true),
    new Line("[LOAD] Загрузка ядра [███▒▒▒▒▒▒▒]", "#aaaaaa", 50, true),
    new Line("[LOAD] Загрузка ядра [████▒▒▒▒▒▒]", "#aaaaaa", 50, true),
    new Line("[LOAD] Загрузка ядра [█████▒▒▒▒▒]", "#aaaaaa", 75, true),
    new Line("[LOAD] Загрузка ядра [██████▒▒▒▒]", "#aaaaaa", 75, true),
    new Line("[LOAD] Загрузка ядра [███████▒▒▒]", "#aaaaaa", 75, true),
    new Line("[LOAD] Загрузка ядра [████████▒▒]", "#aaaaaa", 75, true),
    new Line("[LOAD] Загрузка ядра [█████████▒]", "#aaaaaa", 125, true),
    new Line("[LOAD] Загрузка ядра [██████████]", "#00ff00", 70, true),

    new Line("[INIT] > Загрузка схемы процессов [schema.proc]...", "#aaaaaa", 60),
    new Line("[PROC] -> Регистрация сигнатур: 23 объектов...", "#aaaaaa", 40),
    new Line("[INIT] > Установка таблицы прерываний @0x004F...", "#aaaaaa", 50),
    new Line("[SYSCALL] -> Привязка 78 системных вызовов (std+ext)...", "#aaaaaa", 45),
    new Line("[MEM] Инициализация менеджера памяти (MMU-Ψ)...", "#aaaaaa", 70),
    new Line("[MEM] -> Карта памяти построена: 1024 блоков", "#aaaaaa", 40),
    new Line("[DRIVER] > Загрузка диспетчера IRQ...", "#aaaaaa", 55),
    new Line("[READY] Модуль событий успешно активирован", "#00ff00", 35),
    

    new Line("[SECURITY] Инициализация параметров безопасности...", "#ffff00", 120),
    new Line("[SECURITY] Политика доступа: УРОВЕНЬ 5 — ПРИОРИТЕТ: ВЫСОКИЙ", "#ffff00", 50),
    new Line("[SECURITY] > Обнаружены нестабильные флаги в конфигурации ядра", "#ffff00", 60),
    new Line("[SECURITY] Протокол защиты памяти: АКТИВЕН — МОНИТОРИНГ В РЕЖИМЕ Ψ-ALERT", "#00ff00", 40),
    new Line("[SECURITY] >> Целостность подсистемы I/O: ПОД ВОПРОСОМ", "#ffff00", 45),
    new Line("[SECURITY] Мониторинг целостности включён", "#00ff00", 40),
    new Line("[SECURITY] >> Включена самодиагностика критических точек", "#aaaaaa", 30),
    new Line("[SECURITY] Безопасный режим: ВКЛЮЧЕН", "#00ff00", 70),
    new Line("[WARNING] > Нестабильность уровня L2 верификации — продолжение возможно", "#ffff00", 60),        

    new Line("[SYS] Инициализация управляющего ядра           [▒▒▒▒▒▒▒▒▒▒]", "#aaaaaa", 35),
    new Line("[SYS] Модуль U-CTRL: загрузка                   [█▒▒▒▒▒▒▒▒▒]", "#aaaaaa", 50, true),
    new Line("[SYS] Модуль IO-BUS: handshake...               [██▒▒▒▒▒▒▒▒]", "#aaaaaa", 25, true),
    new Line("[SYS] Установка DMA-каналов                     [███▒▒▒▒▒▒▒]", "#aaaaaa", 50, true),
    new Line("[SYS] Регистр адресов: OK                       [████▒▒▒▒▒▒]", "#aaaaaa", 50, true),
    new Line("[SYS] Проверка сигнала: ±0.03v отклонение       [█████▒▒▒▒▒]", "#ffff00", 45, true),
    new Line("[SYS] Подсистема PWR-MANAGER нестабильна        [██████▒▒▒▒]", "#ffff00", 25, true),
    new Line("[SYS] Калибровка тактирования...                [███████▒▒▒]", "#aaaaaa", 65, true),
    new Line("[SYS] Канал связи L1 синхронизирован            [████████▒▒]", "#00ff00", 55, true),
    new Line("[SYS] Статус устройств: 12/12 OK                [█████████▒]", "#00ff00", 75, true),
    new Line("[SYS] Контроль CRC аппаратного пула: ПРИНЯТО    [██████████]", "#00ff00", 70, true),
    new Line("[SYS] Подсистемы управления успешно активированы",              "#00ff00", 20),
    
    new Line("[SENSOR] Инициализация сенсорных систем...               ", "#aaaaaa", 90),
    new Line("[SENSOR] Температурные датчики: OK                       ", "#00ff00", 20),
    new Line("[SENSOR] Датчики давления: OK                            ", "#00ff00", 20),
    new Line("[SENSOR] Датчики вибрации: OK                            ", "#00ff00", 20),
    new Line("[SENSOR] Датчики радиации: OK                            ", "#00ff00", 25),
    new Line("[SENSOR] Радиационный контроль: Стабильный сигнал        ", "#00ff00", 40),
    new Line("[SENSOR] Калибровка сенсоров завершена успешно           ", "#00ff00", 60),
    new Line("[SENSOR] СЕГМЕНТ 1: Синхронизация успешна                ", "#00ff00", 50),
    new Line("[SENSOR] Диагностика: Все модули функционируют стабильно ", "#00ff00", 70),
    new Line("[SENSOR] Датчики радиации: WARNING — отклонение 0.9%     ", "#ffff00", 30),
    new Line("[SENSOR] ПРЕДУПРЕЖДЕНИЕ: Незначительная задержка сигнала ", "#ffff00", 25),
    new Line("[SENSOR] Ультразвуковые сенсоры: OK                      ", "#00ff00", 20),
    new Line("[SENSOR] Температурные сенсоры: OK                       ", "#00ff00", 20),

    new Line("[SENSOR] Датчики движения: OK", "#00ff00", 20),
    new Line("[WARNING] Зарегистрировано движение в секторе 3-C", "#ffff00", 25),
    new Line("[SENSOR] Датчики звука: OK", "#00ff00", 20),
    new Line("[WARNING] Зарегистрирован шум в секторе 3-C, уровень: 78.5 dB", "#ffff00", 35),
    new Line("[ALERT] НЕИЗВЕСТНЫЙ ОБЪЕКТ В СЕКТОРЕ 3-С", "#ff0000", 40),
    new Line("[SENSOR] Остановка процесса инициализации датчиков", "#ffff00", 20),
    new Line("[SECURITY] Протокол «REAPER» запущен |", "#ffff00", 50),
    new Line("[SECURITY] Протокол «REAPER» запущен /", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен -", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен \\", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен |", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен /", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен -", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен \\", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен |", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен /", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен -", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен \\", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен |", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен /", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен -", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен \\", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен |", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен /", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен -", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен \\", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен |", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен /", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен -", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» запущен \\", "#ffff00", 50, true),
    new Line("[SECURITY] Протокол «REAPER» успешно завершён (34-DC-A4-AK)", "#00ff00", 50, true),  
    new Line("�8ТЫж#Q@НЕ!�%ДДОЛЖЕН?*n7ВБЫТЬ$^&kФ5~+ПЗДЕСЬ9г", "#aaaaaa", 20),
    new Line("[SECURITY] Проверка движения в секторе 3-C", "#ffff00", 500),
    new Line("[SECURITY] Движение в секторе 3-C: отсутствует", "#00ff00", 50),
    new Line("[SECURITY] Проверка шума в секторе 3-C", "#ffff00", 500),
    new Line("[SECURITY] Шум в секторе 3-C: отсутствует", "#00ff00", 50),
    new Line("[SENSOR] Продолжение процесса инициализации датчиков", "#00ff00", 20),
    // Сенсоры и камеры
    new Line("[SENS] Частота опроса: 47Hz (нестаб.)", "#ffff00", 30),
    new Line("[EYE] Сектор 4: ОШИБКА ФОКУСИРОВКИ", "#ff0000", 45),
    new Line("[VIS] Артефакты 12-го порядка", "#ffff00", 40),

    // Вентиляция
    new Line("[VENT] Вихревой контур: АКТИВЕН", "#ffff00", 35),
    new Line("[AIR] Рециркуляция: 78% (Δ+2%)", "#00ff00", 25),

    // Шлюзы
    new Line("[GATE] Сегмент 3: ФАЗОВЫЙ СДВИГ", "#ff0000", 50),
    new Line("[DOOR] Биометрия: ОТКАЗ КОДА 0x7F", "#ffff00", 45),

    // Энергия
    new Line("[PWR] Обратная индукция: 0.04MW", "#ffff00", 40),
    new Line("[PWR] Контур β: КОЛЕБАНИЯ", "#ff0000", 55),

    // Связь
    new Line("[COMM] Несущая: ДРЕЙФ +12Гц", "#ffff00", 35),
    new Line("[SIG] Пакеты 34% LOST", "#ff0000", 60),

    // Среда
    new Line("[ENV] Термоклин: НЕЛИНЕЙНЫЙ", "#ffff00", 50),
    new Line("[RAD] Фон: 0.05µSv (норма)", "#00ff00", 30),

    // Системы
    new Line("[AI] Дерево решений: ПЕРЕСТРОЙКА", "#ffff00", 70),
    new Line("[SYS] Хеш-контроль: FAIL", "#ff0000", 45),

    // Протоколы
    new Line("[PROT] Перепись правил 34-12...", "#aaaaaa", 80),
    new Line("[SAFE] Контур γ: ЗАБЛОКИРОВАН", "#00ff00", 40),

    // Статус
    new Line("[FINAL] Целостность... 89%", "#ffff00", 100),
    new Line("[STATUS] КРИТИЧЕСКИЕ ОШИБКИ: 3", "#ff0000", 60),
    new Line("[END] Частичная стабилизация", "#ffff00", 50),

    // Переход в рабочий режим
    new Line("[SYSTEM] Переход в рабочий режим...", "#00ff00", 120),
    new Line("[SYSTEM] Все системы готовы к эксплуатации", "#00ff00", 60),
    new Line("[SYSTEM] Ожидание команд пользователя...", "#00ff00", 90),
    new Line("[SYSTEM] Рабочий режим активирован", "#00ff00", 50),
    new Line("[SYSTEM] Включение системы наблюдения за состоянием...", "#aaaaaa", 80),
    new Line("[SYSTEM] Система мониторинга активна", "#00ff00", 60),
    new Line(">[SYSTEM READY] BunkerOS v7.4.0-Ψ3 OPERATIONAL", "#00ff00", 500),
];

export const bootSequenceOld: Line[] = [
    ///// ФАЗА 1: СТАНДАРТНАЯ ИНИЦИАЛИЗАЦИЯ /////
    new Line(">> [BOOT] BunkerOS v7.4.0-Ψ3 ИНИЦИАЛИЗАЦИЯ...", "#00ff00", 400),
    new Line(">> BIOS: CRYPTECH SECURE BOOT v4.2", "#00ff00", 30),
    new Line(">> MEMTEST: 8743MB OK | 32MB РЕЗЕРВИРОВАНО", "#00ff00", 30),
    new Line(">> Монтирование /dev/core/bsys [ЗАШИФРОВАНО LUKS]", "#00ff00", 40),
    new Line(">> [!] НЕОЖИДАННЫЙ ХЭШ В /boot/vmlinuz-3.2.1", "#ffff00", 200),
    new Line(">> ПОДТВЕРЖДЕНИЕ [АУТЕНТИФИКАЦИЯ: BIOS_RECOVERY]", "#00ff00", 80),

    ///// ФАЗА 2: ПРОВЕРКА СИСТЕМ ЖИЗНЕОБЕСПЕЧЕНИЯ /////
    new Line(">> ИНИЦИАЛИЗАЦИЯ МОНИТОРА СИСТЕМЫ ЖИЗНЕОБЕСПЕЧЕНИЯ...", "#00ffff", 50),
    new Line(">> УРОВЕНЬ O2: 21.3% (+-0.5% отклонение)", "#00ff00", 30),
    new Line(">> СОКРЫТИЕ CO2: 78% ЭФФЕКТИВНОСТЬ", "#ffff00", 30),
    new Line(">> КРИОГЕННАЯ СИСТЕМА:", "#00ff00", 40),
    new Line(">> ПОД #01: ОПЕРАЦИОНЕН (-112°C)", "#00ff00", 30),
    new Line(">> ПОД #02: УМЕНЬШЕНА ЭФФЕКТИВНОСТЬ (ТЕПЛОВОЕ ОТКЛОНЕНИЕ +3°C)", "#ffff00", 30),
    new Line(">> ПОД #03: ОФФЛАЙН [ПОСЛЕДНЯЯ СОСТОЯНИЕ: НЕУДАЧНОЕ ПЛОМБИРОВАНИЕ]", "#ff0000", 400),
    new Line(">> ПРЕДУПРЕЖДЕНИЕ: ПРОЛОМ СОДЕРЖАНИЯ БИОПРИМЕРОВ ПОДА #03", "#ff0000", 300),
    new Line(">> ПРОТОКОЛ АВТОКАРАНТИНА АКТИВИРОВАН", "#ffff00", 150),

    ///// ФАЗА 3: ЗАГРУЗКА КРИТИЧЕСКИХ СИСТЕМ /////
    new Line(">> ЗАГРУЗКА СИСТЕМЫ БЕЗОПАСНОСТИ...", "#00ff00", 60),
    new Line(">> BLACK ICE ПРОШИВКА v2.1.3 ВКЛЮЧЕНА", "#00ffff", 40),
    new Line(">> ДАТЧИКИ ДВИЖЕНИЯ: 142/144 АКТИВНЫЕ", "#00ff00", 30),
    new Line(">> [!] ДАТЧИК X-12/Y-88: ПОСТОЯННО ОФФЛАЙН", "#ffff00", 80),
    new Line(">> СКАНИРОВАНИЕ СИСТЕМ:", "#00ff00", 50),
    new Line(">> РАДИАЦИОННЫЙ ЩИТ: 98% ЦЕЛОСТНОСТЬ", "#00ff00", 30),
    new Line(">> АИРОЛОКИ: ПЕРВИЧНЫЙ/ ВТОРИЧНЫЙ/ ТРЕТИЧНЫЙ ОК", "#00ff00", 30),
    new Line(">> ГИДРОПОНИКА: 73% ОПЕРАЦИОНАЛЬНО", "#ffff00", 40),
    new Line(">> ИИ ЯДРО: НЕОЖИДАННАЯ ПРОШИВКА", "#ff0000", 300),

    ///// ФАЗА 4: АНОМАЛИИ И СБОИ /////
    new Line(">> [!] ПОРОЖДЕНИЕ В /dev/mem/0xFA404", "#ff0000", 100),
    new Line(">> ВОССТАНОВЛЕНИЕ ФРАГМЕНТА ПАМЯТИ:", "#ffff00", 50),
    new Line(">> '...тепловое событие в секторе Гамма...'", "#aaaaaa", 200),
    new Line(">> ПОПЫТКА ПЕРЕРАЗМЕЩЕНИЯ ПАМЯТИ...", "#ffff00", 40),
    new Line(">> ПРЕДУПРЕЖДЕНИЕ: 47 НЕИСПРАВНЫХ СЕКТОРОВ", "#ff0000", 150),
    new Line(">> ПЕРЕХОД НА РЕДУНДАНТНЫЙ КОНТРОЛЛЕР", "#00ff00", 80),

    ///// ФАЗА 5: ЗАГРУЗКА ДАННЫХ /////
    new Line(">> РАСКОДИРОВКА АРХИВА 'ATLAS'...", "#00ffff", 70),
    new Line(">> КАРТА СЕКТОРОВ:", "#00ff00", 30),
    new Line(">> СЕКТОР A1: ████████████████████ 100%", "#00ff00", 30),
    new Line(">> СЕКТОР B2: ████████████         64%", "#ffff00", 40),
    new Line(">> СЕКТОР G7:                      0%", "#ff0000", 50),
    new Line(">> ОШИБКА: GEODATA CRC НЕСООТВЕТСТВИЕ В СЕКТОРЕ B2", "#ff0000", 200),
    new Line(">> ОШИБКА: GEODATA CRC НЕСООТВЕТСТВИЕ В СЕКТОРЕ G7", "#ff0000", 200),
    new Line(">> ПЕРЕХОД НА ЛОКАЛЬНЫЙ КЕШ...", "#ffff00", 80),
    new Line(">> УСПЕШНО...", "#00ff00", 80),

    ///// ФАЗА 6: АКТИВАЦИЯ ЗАЩИТНЫХ СИСТЕМ /////
    new Line(">> АКТИВАЦИЯ ПРОТОКОЛОВ ЗАЩИТЫ...", "#00ffff", 60),
    new Line(">> АВТО-ГЕНЕРАТОРЫ: КАЛИБРОВКА...", "#00ff00", 40),
    new Line(">> НЕЙРОТОКСИННЫЙ ГЕНЕРАТОР: ОЖИДАНИЕ", "#ffff00", 50),
    new Line(">> [!] ПОДСИСТЕМА X24: НЕАВТОРИЗОВАННЫЙ ДОСТУП", "#ff0000", 300),
    new Line(">> ПРОТОКОЛ УДЕРЖАНИЯ 'ЖЕЛЕЗНЫЙ ЗАНАВЕС' АКТИВИРОВАН", "#ff0000", 150),
    new Line(">> ОШИБКА: ЩИТ ГЕНЕРАТОР ОФФЛАЙН", "#ff0000", 200),
    new Line(">> ПЕРЕХОД НА РУЧНОЙ ОВЕРРАЙД...", "#ffff00", 100),

    ///// ФАЗА 7: ЛОГИ И АРТЕФАКТЫ /////
    new Line(">> РАСКОДИРОВКА НАСЛЕДСТВЕННЫХ СООБЩЕНИЙ...", "#888888", 120),
    new Line(">> LOG_ENTRY 3421: 'Они так и не починили радиатор...'", "#aaaaaa", 200),
    new Line(">> ПОДПИСЬ: ТЕХ_ОФИЦЕР_█▓  [ДОСТУП ЗАКРЫТ]", "#555555", 100),
    new Line(">> АУДИОЛОГ: '...Я НЕ МОГУ ТАК БОЛЬШЕ...'", "#888888", 250),
    new Line(">> НЕИЗВЕСТНЫЙ ФОРМАТ ДАННЫХ: 0xDEADFADE:BEEFCAFE", "#ff0000", 80),
    new Line(">> СОПОСТАВЛЕНИЕ С ПРЕДЫДУЩИМИ ИНЦИДЕНТАМИ...", "#ffff00", 150),

    ///// ФАЗА 8: ФИНАЛЬНЫЙ СТАТУС /////
    new Line(">> СТАТУС СИСТЕМЫ: ОПЕРАЦИОНАЛЬНО [С ОШИБКАМИ]", "#ffff00", 200),
    new Line(">> АКТИВНЫЕ АНОМАЛИИ: 14 КРИТИЧЕСКИХ, 27 ПРЕДУПРЕЖДЕНИЙ", "#ff0000", 150),
    new Line(">> СТАТУС БЕЗОПАСНОСТИ: КОМПРОМЕТИРОВАН [ТИП 3]", "#ff0000", 200),
    new Line(">> РЕКОМЕНДУЕМОЕ ДЕЙСТВИЕ: НЕОБХОДИМА МАНУАЛЬНАЯ ПРОВЕРКА", "#ff0000", 300),
    new Line(">> ЗАВЕРШЕНИЕ ЗАГРУЗКИ", "#00ff00", 100),

    ///// ФАЗА 9: ФОНТАННЫЕ ПРОЦЕССЫ /////
    new Line(">> [ФОН] ОБНАРУЖЕН ПРОЦЕСС-СПУТНИК", "#555555", 80),
    new Line(">> НЕЗАРЕГИСТРИРОВАННАЯ СУЩНОСТЬ В ВЕНТИЛЯЦИОННОМ ШАХТЕ 4B", "#ff0000", 120),
    new Line(">> ТЕПЛОВАЯ АНОМАЛИЯ: КОМНАТА X-12/Y-88 (+3.7°C)", "#ffff00", 100),
    new Line(">> АВТОМАТИЧЕСКАЯ ПРОЧИСТКА ЗАПЛАНИРОВАНА [ОЖИДАЕМЫЙ ВРЕМЕННОЙ ОКНО 47Ч 59М]", "#00ff00", 200),
    new Line(">> ПРЕДУПРЕЖДЕНИЕ: НЕИЗВЕСТНЫЙ ПРОЦЕСС ДОСТУПАЕТСЯ К КАМЕРАМ", "#ff0000", 150),
    new Line(">> ПОСЛЕДНЕЕ СООБЩЕНИЕ: '...они в стенах...'", "#aaaaaa", 300),
    new Line(">> СИСТЕМА ГОТОВА", "#00ff00", 500),
];


export const bunkerOSSequence: Line[] = [
    // Постепенное проявление арта сверху вниз с эффектом "сканирования"
    new Line("           ▄▄▄▄▄▄▄▄▄▄▄▄           ", "#00ffff", 25),
    new Line("       ▄▄██▀▀▀▀▀▀▀▀▀▀▀▀██▄▄       ", "#00ffff", 25),
    new Line("     ▄██▀▄              ▄▀██▄     ", "#00ffff", 25),
    new Line("   ▄██▀▄███            ███▄▀██▄   ", "#00ffff", 25),
    new Line("  ██▀▄██████          ██████▄▀██  ", "#00ffff", 25),
    new Line(" ██ █████████▄      ▄█████████ ██ ", "#00ffff", 25),
    new Line("██ ███████████▄    ▄███████████ ██", "#00ffff", 25),
    new Line("██▄███████████▀▄▄▄▄▀███████████▄██", "#00ffff", 25),
    new Line("█████████████ ██████ █████████████", "#00ffff", 25),
    new Line("██            ██████            ██", "#00ffff", 25),
    new Line("██             ▀▀▀▀             ██", "#00ffff", 25),
    new Line("▀█            ██████▄           ██", "#00ffff", 25),
    new Line(" ██         ▄████████▄         ██ ", "#00ffff", 25),
    new Line("  ██▄      ▄██████████▄      ▄██  ", "#00ffff", 25),
    new Line("   ▀██▄   ▄████████████▄   ▄██▀   ", "#00ffff", 25),
    new Line("     ▀██▄ ▀████████████▀ ▄██▀     ", "#00ffff", 25),
    new Line("       ▀▀██▄▄▄██████▄▄▄██▀▀       ", "#00ffff", 25),
    new Line("           ▀▀▀▀▀▀▀▀▀▀▀▀           ", "#00ffff", 25),
    new Line("______            _        _        _______  _______     _______  _______ ", "#00ffff", 25),
    new Line("(  ___ \\ |\\     /|( (    /|| \\    /\\(  ____ \\(  ____ )   (  ___  )(  ____ \\", "#00ffff", 25),
    new Line("| (   ) )| )   ( ||  \\  ( ||  \\  / /| (    \\/| (    )|   | (   ) || (    \\/", "#00ffff", 25),
    new Line("| (__/ / | |   | ||   \\ | ||  (_/ / | (__    | (____)|   | |   | || (_____ ", "#00ffff", 25),
    new Line("|  __ (  | |   | || (\\ \\) ||   _ (  |  __)   |     __)   | |   | |(_____  )", "#00ffff", 25),
    new Line("| (  \\ \\ | |   | || | \\   ||  ( \\ \\ | (      | (\\ (      | |   | |      ) |", "#00ffff", 25),
    new Line("| )___) )| (___) || )  \\  ||  /  \\ \\| (____/\\| ) \\ \\__ _ | (___) |/\\____) |", "#00ffff", 25),
    new Line("|/ \\___/ (_______)|/    )_)|_/    \\/(_______/|/   \\__/(_)(_______)\\_______)", "#00ffff", 0),
]

export const v1Sequence: Line[] = [
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠈⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠐⡼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⢀⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⢸⠅⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠈⡑⠀⠀⠂⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠈⠀⠀⠀⠀⡐⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠠⠀⠀⠀⠈⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣼⡎⠀⠀⠀⠀⠠⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢄⠀⠀⠀⠀⢰⣶⣤⣤⣦⣶⣖⣶⣶⣶⣶⣶⣆⠀⠀⠀⠀⢠⣾⣿⣿⡃⠀⠀⠀⡐⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⢸⣿⣿⢻⡏⠉⢻⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⢸⣿⣿⣿⡁⠀⡠⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠠⠀⠂⠀⠌⡦⠁⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢸⣿⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⢸⣿⣿⡿⠂⠔⠀⠀⣀⣀⡀⠀⡀⠀⠠⠀⠂⠀⠈⠀⠀⠀⠀⠀⣀⡼⠜⠀⠀⠀", "#00ffff"),
    new Line("⠀⢖⡀⠠⠄⠀⠀⠀⠀⣀⠀⠀⠀⠀⢀⣀⠀⠈⠂⢹⣿⣿⣿⣟⣽⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⢸⣿⣿⡆⠊⣰⣾⣿⢿⡽⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠄⠒⠉⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠦⢀⡀⠀⠀⠀⠀⠀⠀⠈⠁⠀⢿⣿⣿⣾⣤⢸⣿⣿⡿⠟⠛⣻⣿⡿⠃⠀⠀⠀⠀⠀⠀⢹⣿⣿⠃⣸⣿⣿⣿⡟⠀⠀⠀⠀⠀⢀⡀⠠⠒⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠁⠀⠂⠄⠀⡀⠀⠀⠀⠀⢻⣿⣿⣷⣦⣹⣿⣟⣴⣶⣿⣿⣻⣿⣷⣤⣤⣴⣶⣶⣿⣿⣁⣼⣿⣿⡿⠏⠀⢀⠀⠄⠂⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠐⠠⠀⢙⣻⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠂⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡀⢸⣿⣿⣿⡿⣽⣯⢿⣸⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⡿⠟⠋⢀⣠⣴⣿⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢴⡿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣯⢿⣿⢛⣭⣿⣿⣿⣿⣿⣿⣿⣷⣤⣾⣿⣿⣿⣿⣿⡟⠞⠛⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠁⠀⠈⠙⠻⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠛⠟⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠄⠐⠁⠀⠀⠀⠀⠀⢀⠠⠄⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠙⢿⣿⣽⣿⣁⡀⣀⠀⠈⠐⠀⠀⠄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⢀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⢀⡀⡔⠀⠀⠀⠀⢀⠠⠀⠐⠈⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣷⣥⠄⠀⠀⠀⠈⠐⠀⠠⠄⡀⠀⠀⠀⠀⠀⠀⠐⢀⠀⡀⠀", "#00ffff"),
    new Line("⠀⠈⠘⠂⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⣾⡟⠿⢿⣿⣿⣿⡟⢹⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⣿⣿⣿⣿⠏⠛⢿⣿⢿⣿⣟⣯⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠐⠀⠠⠄⡢⡬⠞⠉⠁", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⣰⠱⣿⣿⠁⢸⣿⣿⣿⣿⣿⣿⣿⣿⠋⢀⡼⢉⣿⣿⠀⠐⢀⠀⠀⠀⠀⠀⠃⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠈⠀⠀⠀⡠⣿⢹⣷⢇⣴⣾⣿⣿⣿⣿⣿⣿⣿⣯⣴⣾⣗⢮⡿⡟⠀⠀⠀⠐⠀⠀⠀⠀⠀⠐⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠁⠀⠀⢀⠐⠁⡿⣾⣿⣾⢻⣿⣿⣿⣿⣿⣿⣿⣿⢟⣿⣿⡏⣼⣷⡇⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠐⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠔⠀⠀⢀⠄⠁⠀⠀⡧⣿⣿⡧⣟⣯⣿⣿⣿⣿⣿⣿⢏⢞⣿⣿⡇⣽⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⢀⠊⠀⢀⠔⠁⠀⠀⠀⠀⣟⣿⠙⣷⣯⣿⢿⣿⣿⣿⣿⣟⡾⣞⣿⣿⣓⣾⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠡⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⡤⢀⢄⠔⠁⠀⠀⠀⠀⠀⣴⣿⣿⡀⢹⣾⣽⣿⣻⣿⡿⣿⢾⣽⣻⣿⣿⣿⣾⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠁⠘⣷⡿⣟⣿⣿⡇⣿⣟⡾⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⢀⠀⠀⠓⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⢹⣿⣿⣿⣿⠀⣿⣯⢿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠊⠁⠮⠵⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡿⠀⠀⠀⠘⣷⣿⣿⡟⠀⣿⣟⣿⣿⡿⢸⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠁⠀⠀⠀⠀⢹⣿⣿⣧⣀⣹⣿⣿⣿⡿⣾⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⡏⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⢿⣿⣿⣿⣟⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣻⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⢿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠸⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⠀⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⠀⢹⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣈⣿⣿⡆⠈⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣷⣷⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣿⣿⣿⠿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff"),
    new Line("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠙⠛⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀", "#00ffff")
];

export const svintusSequence: Line[] = [
    new Line("         _________              ", "#00ffff"),
    new Line("         ',_`\"\"\\        .---,", "#00ffff"),
    new Line("            \\   :-\"\"``/`    |", "#00ffff"),
    new Line("             `;'     //`\\   /", "#00ffff"),
    new Line("             /   __     |   ('.", "#00ffff"),
    new Line("            |_ ./O)\\     \\  `) \\", "#00ffff"),
    new Line("           _/-.    `      `\"`  |`-.", "#00ffff"),
    new Line("       .-=; `                  /   `-.", "#00ffff"),
    new Line("      /o o \\   ,_,           .        '.", "#00ffff"),
    new Line("      L._._;_.-'           .            `'-.", "#00ffff"),
    new Line("        `'-.`             '                 `'-.", "#00ffff"),
    new Line("            `.         '                        `-._", "#00ffff"),
    new Line("              '-._. -'                              '.", "#00ffff"),
    new Line("                 \\                                    \\", "#00ffff"),
    new Line("                  |                                     \\", "#00ffff"),
    new Line("                  |    |                                 ;   _.", "#00ffff"),
    new Line("                  \\    |           |                     |-.((", "#00ffff"),
    new Line("                   ;.  \\           /    /                |-.`\\)", "#00ffff"),
    new Line("                   | '. ;         /    |                 |(_) )", "#00ffff"),
    new Line("                   |   \\ \\       /`    |                 ;'--'", "#00ffff"),
    new Line("                    \\   '.\\    /`      |                /", "#00ffff"),
    new Line("                     |   /`|  ;        \\               /", "#00ffff"),
    new Line("                     |  |  |  |-._      '.           .'", "#00ffff"),
    new Line("                     /  |  |  |__.`'---\"_;'-.     .-'", "#00ffff"),
    new Line("                    //__/  /  |    .-'``     _.-'`", "#00ffff"),
    new Line("                  jgs     //__/   //___.--''`", "#00ffff")
];